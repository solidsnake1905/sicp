accumulate	prac2_34.scm	/^ (accumulate (lambda (this-coeff higher-terms) (+ /
cc	prac2_19.scm	/^		   (cc (- amount (first-denomination coin-values/
cons	prac2_42.scm	/^(define (adjoin-position row col rest-of-queens) (/
filter	permutation.scm	/^ (filter (lambda (x) (not (= item x))) seq))$/
if	accumulate.scm	/^ (if (null? sequence)$/
map	prac2_35.scm	/^ (accumulate + 0 (map (lambda (x) $/
prev	prac2_61.scm	/^		((< x (car post)) (append prev (list x) post))$/
set	prac2_60.scm	/^		((element-of-set? (car set1) set2) (cons (car se/
