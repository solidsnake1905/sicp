(define (make-account balance secret-password)
 (define error-count 0)
 (define (pass? password)
  (equal? secret-password password))
 (define (withdraw)
  (lambda (amount)
   (if (>= balance amount)
	(begin (set! balance (- balance amount))
	 balance)
	"Insufficient funds"))
 )

 (define (deposit)
  (lambda (amount)
   (begin (set! balance (+ balance amount))
	balance)))
 (define call-the-police

  "police will come!")
 (define (warn maxcount)
  (lambda (m)
   (begin
	(set! error-count (+ error-count 1))
	(if(< error-count maxcount)
	 "Incorrect password"
	 (begin (display "Incorrect password") (newline)
	  call-the-police))
   )))
	(define warning (warn 7))
	(define (dispatch password m)
	 (if (pass? password)
	  ((cond ((equal? m 'withdraw) withdraw)
		((equal? m 'deposit) deposit)
		(else (error "Unknown request -- MAKE-ACCOUNT" m))))
	  warning)
	) 
	dispatch)

	(define acc (make-account 100 'hello1234))
(newline)
	(display ((acc 'hello1234 'withdraw) 50))
(newline)
	(display ((acc 'hello123 'withdraw) 50))
(newline)
	(display ((acc 'hello123 'withdraw) 50))
(newline)
	(display ((acc 'hello123 'withdraw) 50))
(newline)
	(display ((acc 'hello123 'withdraw) 50))
(newline)
	(display ((acc 'hello123 'withdraw) 50))
(newline)
	(display ((acc 'hello123 'withdraw) 50))
(newline)
	(display ((acc 'hello123 'withdraw) 50))
(newline)
	(display ((acc 'hello123 'withdraw) 50))
(newline)
	(display ((acc 'hello1234 'deposit) 30))
