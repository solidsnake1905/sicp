(define (cons x y)
 (define (set-x! v) (set! x v))
 (define (set-y! v) (set! y v))
 (define (dispatch m)
  (cond ((eq? m 'car) x)
		((eq? m 'cdr) y)
		((eq? m 'set-car!) set-x!)
		((eq? m 'set-cdr!) set-y!)
		(else (error "Undefined operation -- CONS" m)))
  )
 dispatch)

(define (car z) (z 'car))
(define (cdr z) (z 'cdr))
(define (set-car! z new-value) ((z 'set-car!) new-value))
(define (set-cdr! z new-value) ((z 'set-cdr!) new-value))


(define x (cons 1 2))

(newline)
(display (car x))
(newline)
(display (cdr x))
(newline)
(set-car! x 3)
(set-cdr! x 4)
(display (car x))
(newline)
(display (cdr x))
(newline)

